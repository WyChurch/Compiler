Terminals which are not used

   KWD_STRING
   OPER_ASGN
   ERROR
   ILLEGAL_TOKEN


State 106 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declList

    2 declList: decl
    3         | declList decl

    4 decl: varDecl
    5     | funDecl

    6 varDecl: typeSpecifier ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    7        | typeSpecifier ID SEMICLN

    8 typeSpecifier: KWD_INT
    9              | KWD_CHAR
   10              | KWD_VOID

   11 funDecl: typeSpecifier ID LPAREN formalDeclList RPAREN funBody
   12        | typeSpecifier ID LPAREN RPAREN funBody

   13 formalDeclList: formalDecl
   14               | formalDecl COMMA formalDeclList

   15 formalDecl: typeSpecifier ID
   16           | typeSpecifier ID LSQ_BRKT RSQ_BRKT

   17 funBody: LCRLY_BRKT localDeclList statementList RCRLY_BRKT

   18 localDeclList: /* empty */
   19              | varDecl localDeclList

   20 statementList: /* empty */
   21              | statement statementList

   22 statement: compoundStmt
   23          | assignStmt
   24          | condStmt
   25          | loopStmt
   26          | returnStmt

   27 compoundStmt: LCRLY_BRKT statementList RCRLY_BRKT

   28 assignStmt: var OPER_ASSN expression SEMICLN
   29           | expression SEMICLN

   30 condStmt: KWD_IF LPAREN expression RPAREN statement
   31         | KWD_IF LPAREN expression RPAREN statement KWD_ELSE statement

   32 loopStmt: KWD_WHILE LPAREN expression RPAREN statement

   33 returnStmt: KWD_RETURN SEMICLN
   34           | KWD_RETURN expression SEMICLN

   35 var: ID
   36    | ID RSQ_BRKT addExpr LSQ_BRKT

   37 expression: addExpr
   38           | expression relop addExpr

   39 relop: OPER_LTE
   40      | OPER_LT
   41      | OPER_GT
   42      | OPER_GTE
   43      | OPER_EQ
   44      | OPER_NEQ

   45 addExpr: term
   46        | addExpr addop term

   47 addop: OPER_ADD
   48      | OPER_SUB

   49 term: factor
   50     | term mulop factor

   51 mulop: OPER_MUL
   52      | OPER_DIV

   53 factor: LPAREN expression RPAREN
   54       | var
   55       | funcCallExpr
   56       | INTCONST
   57       | CHARCONST
   58       | STRCONST

   59 funcCallExpr: ID LPAREN argList RPAREN
   60             | ID LPAREN RPAREN

   61 argList: expression
   62        | argList COMMA expression


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 6 7 11 12 15 16 35 36 59 60
INTCONST (259) 6 56
CHARCONST (260) 57
STRCONST (261) 58
KWD_INT (262) 8
KWD_CHAR (263) 9
KWD_STRING (264)
KWD_VOID (265) 10
KWD_WHILE (266) 32
KWD_IF (267) 30 31
KWD_ELSE (268) 31
KWD_RETURN (269) 33 34
OPER_ADD (270) 47
OPER_SUB (271) 48
OPER_MUL (272) 51
OPER_DIV (273) 52
OPER_ASSN (274) 28
OPER_LT (275) 40
OPER_LTE (276) 39
OPER_EQ (277) 43
OPER_GTE (278) 42
OPER_GT (279) 41
OPER_NEQ (280) 44
OPER_ASGN (281)
LSQ_BRKT (282) 6 16 36
RSQ_BRKT (283) 6 16 36
LCRLY_BRKT (284) 17 27
RCRLY_BRKT (285) 17 27
LPAREN (286) 11 12 30 31 32 53 59 60
RPAREN (287) 11 12 30 31 32 53 59 60
COMMA (288) 14 62
SEMICLN (289) 6 7 28 29 33 34
ERROR (290)
ILLEGAL_TOKEN (291)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1, on right: 0
declList (39)
    on left: 2 3, on right: 1 3
decl (40)
    on left: 4 5, on right: 2 3
varDecl (41)
    on left: 6 7, on right: 4 19
typeSpecifier (42)
    on left: 8 9 10, on right: 6 7 11 12 15 16
funDecl (43)
    on left: 11 12, on right: 5
formalDeclList (44)
    on left: 13 14, on right: 11 14
formalDecl (45)
    on left: 15 16, on right: 13 14
funBody (46)
    on left: 17, on right: 11 12
localDeclList (47)
    on left: 18 19, on right: 17 19
statementList (48)
    on left: 20 21, on right: 17 21 27
statement (49)
    on left: 22 23 24 25 26, on right: 21 30 31 32
compoundStmt (50)
    on left: 27, on right: 22
assignStmt (51)
    on left: 28 29, on right: 23
condStmt (52)
    on left: 30 31, on right: 24
loopStmt (53)
    on left: 32, on right: 25
returnStmt (54)
    on left: 33 34, on right: 26
var (55)
    on left: 35 36, on right: 28 54
expression (56)
    on left: 37 38, on right: 28 29 30 31 32 34 38 53 61 62
relop (57)
    on left: 39 40 41 42 43 44, on right: 38
addExpr (58)
    on left: 45 46, on right: 36 37 38 46
addop (59)
    on left: 47 48, on right: 46
term (60)
    on left: 49 50, on right: 45 46 50
mulop (61)
    on left: 51 52, on right: 50
factor (62)
    on left: 53 54 55 56 57 58, on right: 49 50
funcCallExpr (63)
    on left: 59 60, on right: 55
argList (64)
    on left: 61 62, on right: 59 62


state 0

    0 $accept: . program $end

    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3

    program        go to state 4
    declList       go to state 5
    decl           go to state 6
    varDecl        go to state 7
    typeSpecifier  go to state 8
    funDecl        go to state 9


state 1

    8 typeSpecifier: KWD_INT .

    $default  reduce using rule 8 (typeSpecifier)


state 2

    9 typeSpecifier: KWD_CHAR .

    $default  reduce using rule 9 (typeSpecifier)


state 3

   10 typeSpecifier: KWD_VOID .

    $default  reduce using rule 10 (typeSpecifier)


state 4

    0 $accept: program . $end

    $end  shift, and go to state 10


state 5

    1 program: declList .
    3 declList: declList . decl

    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3

    $default  reduce using rule 1 (program)

    decl           go to state 11
    varDecl        go to state 7
    typeSpecifier  go to state 8
    funDecl        go to state 9


state 6

    2 declList: decl .

    $default  reduce using rule 2 (declList)


state 7

    4 decl: varDecl .

    $default  reduce using rule 4 (decl)


state 8

    6 varDecl: typeSpecifier . ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    7        | typeSpecifier . ID SEMICLN
   11 funDecl: typeSpecifier . ID LPAREN formalDeclList RPAREN funBody
   12        | typeSpecifier . ID LPAREN RPAREN funBody

    ID  shift, and go to state 12


state 9

    5 decl: funDecl .

    $default  reduce using rule 5 (decl)


state 10

    0 $accept: program $end .

    $default  accept


state 11

    3 declList: declList decl .

    $default  reduce using rule 3 (declList)


state 12

    6 varDecl: typeSpecifier ID . LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    7        | typeSpecifier ID . SEMICLN
   11 funDecl: typeSpecifier ID . LPAREN formalDeclList RPAREN funBody
   12        | typeSpecifier ID . LPAREN RPAREN funBody

    LSQ_BRKT  shift, and go to state 13
    LPAREN    shift, and go to state 14
    SEMICLN   shift, and go to state 15


state 13

    6 varDecl: typeSpecifier ID LSQ_BRKT . INTCONST RSQ_BRKT SEMICLN

    INTCONST  shift, and go to state 16


state 14

   11 funDecl: typeSpecifier ID LPAREN . formalDeclList RPAREN funBody
   12        | typeSpecifier ID LPAREN . RPAREN funBody

    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3
    RPAREN    shift, and go to state 17

    typeSpecifier   go to state 18
    formalDeclList  go to state 19
    formalDecl      go to state 20


state 15

    7 varDecl: typeSpecifier ID SEMICLN .

    $default  reduce using rule 7 (varDecl)


state 16

    6 varDecl: typeSpecifier ID LSQ_BRKT INTCONST . RSQ_BRKT SEMICLN

    RSQ_BRKT  shift, and go to state 21


state 17

   12 funDecl: typeSpecifier ID LPAREN RPAREN . funBody

    LCRLY_BRKT  shift, and go to state 22

    funBody  go to state 23


state 18

   15 formalDecl: typeSpecifier . ID
   16           | typeSpecifier . ID LSQ_BRKT RSQ_BRKT

    ID  shift, and go to state 24


state 19

   11 funDecl: typeSpecifier ID LPAREN formalDeclList . RPAREN funBody

    RPAREN  shift, and go to state 25


state 20

   13 formalDeclList: formalDecl .
   14               | formalDecl . COMMA formalDeclList

    COMMA  shift, and go to state 26

    $default  reduce using rule 13 (formalDeclList)


state 21

    6 varDecl: typeSpecifier ID LSQ_BRKT INTCONST RSQ_BRKT . SEMICLN

    SEMICLN  shift, and go to state 27


state 22

   17 funBody: LCRLY_BRKT . localDeclList statementList RCRLY_BRKT

    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3

    $default  reduce using rule 18 (localDeclList)

    varDecl        go to state 28
    typeSpecifier  go to state 29
    localDeclList  go to state 30


state 23

   12 funDecl: typeSpecifier ID LPAREN RPAREN funBody .

    $default  reduce using rule 12 (funDecl)


state 24

   15 formalDecl: typeSpecifier ID .
   16           | typeSpecifier ID . LSQ_BRKT RSQ_BRKT

    LSQ_BRKT  shift, and go to state 31

    $default  reduce using rule 15 (formalDecl)


state 25

   11 funDecl: typeSpecifier ID LPAREN formalDeclList RPAREN . funBody

    LCRLY_BRKT  shift, and go to state 22

    funBody  go to state 32


state 26

   14 formalDeclList: formalDecl COMMA . formalDeclList

    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3

    typeSpecifier   go to state 18
    formalDeclList  go to state 33
    formalDecl      go to state 20


state 27

    6 varDecl: typeSpecifier ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN .

    $default  reduce using rule 6 (varDecl)


state 28

   19 localDeclList: varDecl . localDeclList

    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3

    $default  reduce using rule 18 (localDeclList)

    varDecl        go to state 28
    typeSpecifier  go to state 29
    localDeclList  go to state 34


state 29

    6 varDecl: typeSpecifier . ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    7        | typeSpecifier . ID SEMICLN

    ID  shift, and go to state 35


state 30

   17 funBody: LCRLY_BRKT localDeclList . statementList RCRLY_BRKT

    ID          shift, and go to state 36
    INTCONST    shift, and go to state 37
    CHARCONST   shift, and go to state 38
    STRCONST    shift, and go to state 39
    KWD_WHILE   shift, and go to state 40
    KWD_IF      shift, and go to state 41
    KWD_RETURN  shift, and go to state 42
    LCRLY_BRKT  shift, and go to state 43
    LPAREN      shift, and go to state 44

    $default  reduce using rule 20 (statementList)

    statementList  go to state 45
    statement      go to state 46
    compoundStmt   go to state 47
    assignStmt     go to state 48
    condStmt       go to state 49
    loopStmt       go to state 50
    returnStmt     go to state 51
    var            go to state 52
    expression     go to state 53
    addExpr        go to state 54
    term           go to state 55
    factor         go to state 56
    funcCallExpr   go to state 57


state 31

   16 formalDecl: typeSpecifier ID LSQ_BRKT . RSQ_BRKT

    RSQ_BRKT  shift, and go to state 58


state 32

   11 funDecl: typeSpecifier ID LPAREN formalDeclList RPAREN funBody .

    $default  reduce using rule 11 (funDecl)


state 33

   14 formalDeclList: formalDecl COMMA formalDeclList .

    $default  reduce using rule 14 (formalDeclList)


state 34

   19 localDeclList: varDecl localDeclList .

    $default  reduce using rule 19 (localDeclList)


state 35

    6 varDecl: typeSpecifier ID . LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    7        | typeSpecifier ID . SEMICLN

    LSQ_BRKT  shift, and go to state 13
    SEMICLN   shift, and go to state 15


state 36

   35 var: ID .
   36    | ID . RSQ_BRKT addExpr LSQ_BRKT
   59 funcCallExpr: ID . LPAREN argList RPAREN
   60             | ID . LPAREN RPAREN

    RSQ_BRKT  shift, and go to state 59
    LPAREN    shift, and go to state 60

    $default  reduce using rule 35 (var)


state 37

   56 factor: INTCONST .

    $default  reduce using rule 56 (factor)


state 38

   57 factor: CHARCONST .

    $default  reduce using rule 57 (factor)


state 39

   58 factor: STRCONST .

    $default  reduce using rule 58 (factor)


state 40

   32 loopStmt: KWD_WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 61


state 41

   30 condStmt: KWD_IF . LPAREN expression RPAREN statement
   31         | KWD_IF . LPAREN expression RPAREN statement KWD_ELSE statement

    LPAREN  shift, and go to state 62


state 42

   33 returnStmt: KWD_RETURN . SEMICLN
   34           | KWD_RETURN . expression SEMICLN

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44
    SEMICLN    shift, and go to state 63

    var           go to state 64
    expression    go to state 65
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 43

   27 compoundStmt: LCRLY_BRKT . statementList RCRLY_BRKT

    ID          shift, and go to state 36
    INTCONST    shift, and go to state 37
    CHARCONST   shift, and go to state 38
    STRCONST    shift, and go to state 39
    KWD_WHILE   shift, and go to state 40
    KWD_IF      shift, and go to state 41
    KWD_RETURN  shift, and go to state 42
    LCRLY_BRKT  shift, and go to state 43
    LPAREN      shift, and go to state 44

    $default  reduce using rule 20 (statementList)

    statementList  go to state 66
    statement      go to state 46
    compoundStmt   go to state 47
    assignStmt     go to state 48
    condStmt       go to state 49
    loopStmt       go to state 50
    returnStmt     go to state 51
    var            go to state 52
    expression     go to state 53
    addExpr        go to state 54
    term           go to state 55
    factor         go to state 56
    funcCallExpr   go to state 57


state 44

   53 factor: LPAREN . expression RPAREN

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44

    var           go to state 64
    expression    go to state 67
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 45

   17 funBody: LCRLY_BRKT localDeclList statementList . RCRLY_BRKT

    RCRLY_BRKT  shift, and go to state 68


state 46

   21 statementList: statement . statementList

    ID          shift, and go to state 36
    INTCONST    shift, and go to state 37
    CHARCONST   shift, and go to state 38
    STRCONST    shift, and go to state 39
    KWD_WHILE   shift, and go to state 40
    KWD_IF      shift, and go to state 41
    KWD_RETURN  shift, and go to state 42
    LCRLY_BRKT  shift, and go to state 43
    LPAREN      shift, and go to state 44

    $default  reduce using rule 20 (statementList)

    statementList  go to state 69
    statement      go to state 46
    compoundStmt   go to state 47
    assignStmt     go to state 48
    condStmt       go to state 49
    loopStmt       go to state 50
    returnStmt     go to state 51
    var            go to state 52
    expression     go to state 53
    addExpr        go to state 54
    term           go to state 55
    factor         go to state 56
    funcCallExpr   go to state 57


state 47

   22 statement: compoundStmt .

    $default  reduce using rule 22 (statement)


state 48

   23 statement: assignStmt .

    $default  reduce using rule 23 (statement)


state 49

   24 statement: condStmt .

    $default  reduce using rule 24 (statement)


state 50

   25 statement: loopStmt .

    $default  reduce using rule 25 (statement)


state 51

   26 statement: returnStmt .

    $default  reduce using rule 26 (statement)


state 52

   28 assignStmt: var . OPER_ASSN expression SEMICLN
   54 factor: var .

    OPER_ASSN  shift, and go to state 70

    $default  reduce using rule 54 (factor)


state 53

   29 assignStmt: expression . SEMICLN
   38 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 71
    OPER_LTE  shift, and go to state 72
    OPER_EQ   shift, and go to state 73
    OPER_GTE  shift, and go to state 74
    OPER_GT   shift, and go to state 75
    OPER_NEQ  shift, and go to state 76
    SEMICLN   shift, and go to state 77

    relop  go to state 78


state 54

   37 expression: addExpr .
   46 addExpr: addExpr . addop term

    OPER_ADD  shift, and go to state 79
    OPER_SUB  shift, and go to state 80

    $default  reduce using rule 37 (expression)

    addop  go to state 81


state 55

   45 addExpr: term .
   50 term: term . mulop factor

    OPER_MUL  shift, and go to state 82
    OPER_DIV  shift, and go to state 83

    $default  reduce using rule 45 (addExpr)

    mulop  go to state 84


state 56

   49 term: factor .

    $default  reduce using rule 49 (term)


state 57

   55 factor: funcCallExpr .

    $default  reduce using rule 55 (factor)


state 58

   16 formalDecl: typeSpecifier ID LSQ_BRKT RSQ_BRKT .

    $default  reduce using rule 16 (formalDecl)


state 59

   36 var: ID RSQ_BRKT . addExpr LSQ_BRKT

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44

    var           go to state 64
    addExpr       go to state 85
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 60

   59 funcCallExpr: ID LPAREN . argList RPAREN
   60             | ID LPAREN . RPAREN

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44
    RPAREN     shift, and go to state 86

    var           go to state 64
    expression    go to state 87
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57
    argList       go to state 88


state 61

   32 loopStmt: KWD_WHILE LPAREN . expression RPAREN statement

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44

    var           go to state 64
    expression    go to state 89
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 62

   30 condStmt: KWD_IF LPAREN . expression RPAREN statement
   31         | KWD_IF LPAREN . expression RPAREN statement KWD_ELSE statement

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44

    var           go to state 64
    expression    go to state 90
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 63

   33 returnStmt: KWD_RETURN SEMICLN .

    $default  reduce using rule 33 (returnStmt)


state 64

   54 factor: var .

    $default  reduce using rule 54 (factor)


state 65

   34 returnStmt: KWD_RETURN expression . SEMICLN
   38 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 71
    OPER_LTE  shift, and go to state 72
    OPER_EQ   shift, and go to state 73
    OPER_GTE  shift, and go to state 74
    OPER_GT   shift, and go to state 75
    OPER_NEQ  shift, and go to state 76
    SEMICLN   shift, and go to state 91

    relop  go to state 78


state 66

   27 compoundStmt: LCRLY_BRKT statementList . RCRLY_BRKT

    RCRLY_BRKT  shift, and go to state 92


state 67

   38 expression: expression . relop addExpr
   53 factor: LPAREN expression . RPAREN

    OPER_LT   shift, and go to state 71
    OPER_LTE  shift, and go to state 72
    OPER_EQ   shift, and go to state 73
    OPER_GTE  shift, and go to state 74
    OPER_GT   shift, and go to state 75
    OPER_NEQ  shift, and go to state 76
    RPAREN    shift, and go to state 93

    relop  go to state 78


state 68

   17 funBody: LCRLY_BRKT localDeclList statementList RCRLY_BRKT .

    $default  reduce using rule 17 (funBody)


state 69

   21 statementList: statement statementList .

    $default  reduce using rule 21 (statementList)


state 70

   28 assignStmt: var OPER_ASSN . expression SEMICLN

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44

    var           go to state 64
    expression    go to state 94
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 71

   40 relop: OPER_LT .

    $default  reduce using rule 40 (relop)


state 72

   39 relop: OPER_LTE .

    $default  reduce using rule 39 (relop)


state 73

   43 relop: OPER_EQ .

    $default  reduce using rule 43 (relop)


state 74

   42 relop: OPER_GTE .

    $default  reduce using rule 42 (relop)


state 75

   41 relop: OPER_GT .

    $default  reduce using rule 41 (relop)


state 76

   44 relop: OPER_NEQ .

    $default  reduce using rule 44 (relop)


state 77

   29 assignStmt: expression SEMICLN .

    $default  reduce using rule 29 (assignStmt)


state 78

   38 expression: expression relop . addExpr

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44

    var           go to state 64
    addExpr       go to state 95
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 79

   47 addop: OPER_ADD .

    $default  reduce using rule 47 (addop)


state 80

   48 addop: OPER_SUB .

    $default  reduce using rule 48 (addop)


state 81

   46 addExpr: addExpr addop . term

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44

    var           go to state 64
    term          go to state 96
    factor        go to state 56
    funcCallExpr  go to state 57


state 82

   51 mulop: OPER_MUL .

    $default  reduce using rule 51 (mulop)


state 83

   52 mulop: OPER_DIV .

    $default  reduce using rule 52 (mulop)


state 84

   50 term: term mulop . factor

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44

    var           go to state 64
    factor        go to state 97
    funcCallExpr  go to state 57


state 85

   36 var: ID RSQ_BRKT addExpr . LSQ_BRKT
   46 addExpr: addExpr . addop term

    OPER_ADD  shift, and go to state 79
    OPER_SUB  shift, and go to state 80
    LSQ_BRKT  shift, and go to state 98

    addop  go to state 81


state 86

   60 funcCallExpr: ID LPAREN RPAREN .

    $default  reduce using rule 60 (funcCallExpr)


state 87

   38 expression: expression . relop addExpr
   61 argList: expression .

    OPER_LT   shift, and go to state 71
    OPER_LTE  shift, and go to state 72
    OPER_EQ   shift, and go to state 73
    OPER_GTE  shift, and go to state 74
    OPER_GT   shift, and go to state 75
    OPER_NEQ  shift, and go to state 76

    $default  reduce using rule 61 (argList)

    relop  go to state 78


state 88

   59 funcCallExpr: ID LPAREN argList . RPAREN
   62 argList: argList . COMMA expression

    RPAREN  shift, and go to state 99
    COMMA   shift, and go to state 100


state 89

   32 loopStmt: KWD_WHILE LPAREN expression . RPAREN statement
   38 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 71
    OPER_LTE  shift, and go to state 72
    OPER_EQ   shift, and go to state 73
    OPER_GTE  shift, and go to state 74
    OPER_GT   shift, and go to state 75
    OPER_NEQ  shift, and go to state 76
    RPAREN    shift, and go to state 101

    relop  go to state 78


state 90

   30 condStmt: KWD_IF LPAREN expression . RPAREN statement
   31         | KWD_IF LPAREN expression . RPAREN statement KWD_ELSE statement
   38 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 71
    OPER_LTE  shift, and go to state 72
    OPER_EQ   shift, and go to state 73
    OPER_GTE  shift, and go to state 74
    OPER_GT   shift, and go to state 75
    OPER_NEQ  shift, and go to state 76
    RPAREN    shift, and go to state 102

    relop  go to state 78


state 91

   34 returnStmt: KWD_RETURN expression SEMICLN .

    $default  reduce using rule 34 (returnStmt)


state 92

   27 compoundStmt: LCRLY_BRKT statementList RCRLY_BRKT .

    $default  reduce using rule 27 (compoundStmt)


state 93

   53 factor: LPAREN expression RPAREN .

    $default  reduce using rule 53 (factor)


state 94

   28 assignStmt: var OPER_ASSN expression . SEMICLN
   38 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 71
    OPER_LTE  shift, and go to state 72
    OPER_EQ   shift, and go to state 73
    OPER_GTE  shift, and go to state 74
    OPER_GT   shift, and go to state 75
    OPER_NEQ  shift, and go to state 76
    SEMICLN   shift, and go to state 103

    relop  go to state 78


state 95

   38 expression: expression relop addExpr .
   46 addExpr: addExpr . addop term

    OPER_ADD  shift, and go to state 79
    OPER_SUB  shift, and go to state 80

    $default  reduce using rule 38 (expression)

    addop  go to state 81


state 96

   46 addExpr: addExpr addop term .
   50 term: term . mulop factor

    OPER_MUL  shift, and go to state 82
    OPER_DIV  shift, and go to state 83

    $default  reduce using rule 46 (addExpr)

    mulop  go to state 84


state 97

   50 term: term mulop factor .

    $default  reduce using rule 50 (term)


state 98

   36 var: ID RSQ_BRKT addExpr LSQ_BRKT .

    $default  reduce using rule 36 (var)


state 99

   59 funcCallExpr: ID LPAREN argList RPAREN .

    $default  reduce using rule 59 (funcCallExpr)


state 100

   62 argList: argList COMMA . expression

    ID         shift, and go to state 36
    INTCONST   shift, and go to state 37
    CHARCONST  shift, and go to state 38
    STRCONST   shift, and go to state 39
    LPAREN     shift, and go to state 44

    var           go to state 64
    expression    go to state 104
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 101

   32 loopStmt: KWD_WHILE LPAREN expression RPAREN . statement

    ID          shift, and go to state 36
    INTCONST    shift, and go to state 37
    CHARCONST   shift, and go to state 38
    STRCONST    shift, and go to state 39
    KWD_WHILE   shift, and go to state 40
    KWD_IF      shift, and go to state 41
    KWD_RETURN  shift, and go to state 42
    LCRLY_BRKT  shift, and go to state 43
    LPAREN      shift, and go to state 44

    statement     go to state 105
    compoundStmt  go to state 47
    assignStmt    go to state 48
    condStmt      go to state 49
    loopStmt      go to state 50
    returnStmt    go to state 51
    var           go to state 52
    expression    go to state 53
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 102

   30 condStmt: KWD_IF LPAREN expression RPAREN . statement
   31         | KWD_IF LPAREN expression RPAREN . statement KWD_ELSE statement

    ID          shift, and go to state 36
    INTCONST    shift, and go to state 37
    CHARCONST   shift, and go to state 38
    STRCONST    shift, and go to state 39
    KWD_WHILE   shift, and go to state 40
    KWD_IF      shift, and go to state 41
    KWD_RETURN  shift, and go to state 42
    LCRLY_BRKT  shift, and go to state 43
    LPAREN      shift, and go to state 44

    statement     go to state 106
    compoundStmt  go to state 47
    assignStmt    go to state 48
    condStmt      go to state 49
    loopStmt      go to state 50
    returnStmt    go to state 51
    var           go to state 52
    expression    go to state 53
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 103

   28 assignStmt: var OPER_ASSN expression SEMICLN .

    $default  reduce using rule 28 (assignStmt)


state 104

   38 expression: expression . relop addExpr
   62 argList: argList COMMA expression .

    OPER_LT   shift, and go to state 71
    OPER_LTE  shift, and go to state 72
    OPER_EQ   shift, and go to state 73
    OPER_GTE  shift, and go to state 74
    OPER_GT   shift, and go to state 75
    OPER_NEQ  shift, and go to state 76

    $default  reduce using rule 62 (argList)

    relop  go to state 78


state 105

   32 loopStmt: KWD_WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 32 (loopStmt)


state 106

   30 condStmt: KWD_IF LPAREN expression RPAREN statement .
   31         | KWD_IF LPAREN expression RPAREN statement . KWD_ELSE statement

    KWD_ELSE  shift, and go to state 107

    KWD_ELSE  [reduce using rule 30 (condStmt)]
    $default  reduce using rule 30 (condStmt)


state 107

   31 condStmt: KWD_IF LPAREN expression RPAREN statement KWD_ELSE . statement

    ID          shift, and go to state 36
    INTCONST    shift, and go to state 37
    CHARCONST   shift, and go to state 38
    STRCONST    shift, and go to state 39
    KWD_WHILE   shift, and go to state 40
    KWD_IF      shift, and go to state 41
    KWD_RETURN  shift, and go to state 42
    LCRLY_BRKT  shift, and go to state 43
    LPAREN      shift, and go to state 44

    statement     go to state 108
    compoundStmt  go to state 47
    assignStmt    go to state 48
    condStmt      go to state 49
    loopStmt      go to state 50
    returnStmt    go to state 51
    var           go to state 52
    expression    go to state 53
    addExpr       go to state 54
    term          go to state 55
    factor        go to state 56
    funcCallExpr  go to state 57


state 108

   31 condStmt: KWD_IF LPAREN expression RPAREN statement KWD_ELSE statement .

    $default  reduce using rule 31 (condStmt)
