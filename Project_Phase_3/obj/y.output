Terminals which are not used

   KWD_STRING
   OPER_ASGN
   ERROR
   ILLEGAL_TOKEN


Rules never reduced

    4 funcReturnType: KWD_INT
    5               | KWD_CHAR


State 1 conflicts: 1 reduce/reduce
State 2 conflicts: 1 reduce/reduce
State 111 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declList

    2 varTypeSpecifier: KWD_INT
    3                 | KWD_CHAR

    4 funcReturnType: KWD_INT
    5               | KWD_CHAR
    6               | KWD_VOID

    7 declList: decl
    8         | declList decl

    9 decl: varDecl
   10     | funDecl

   11 varDecl: varTypeSpecifier ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
   12        | varTypeSpecifier ID SEMICLN

   13 formalDecl: varTypeSpecifier ID
   14           | varTypeSpecifier ID LSQ_BRKT RSQ_BRKT

   15 formalDeclList: formalDecl
   16               | formalDecl COMMA formalDeclList

   17 funDecl: funcReturnType ID LPAREN formalDeclList RPAREN funBody
   18        | varTypeSpecifier ID LPAREN RPAREN funBody

   19 funBody: LCRLY_BRKT localDeclList statementList RCRLY_BRKT

   20 localDeclList: /* empty */
   21              | varDecl localDeclList

   22 statementList: /* empty */
   23              | statement statementList

   24 statement: compoundStmt
   25          | assignStmt
   26          | condStmt
   27          | loopStmt
   28          | returnStmt

   29 compoundStmt: LCRLY_BRKT statementList RCRLY_BRKT

   30 assignStmt: var OPER_ASSN expression SEMICLN
   31           | expression SEMICLN

   32 condStmt: KWD_IF LPAREN expression RPAREN statement
   33         | KWD_IF LPAREN expression RPAREN statement KWD_ELSE statement

   34 loopStmt: KWD_WHILE LPAREN expression RPAREN statement

   35 returnStmt: KWD_RETURN SEMICLN
   36           | KWD_RETURN expression SEMICLN

   37 var: ID
   38    | ID RSQ_BRKT addExpr LSQ_BRKT

   39 expression: addExpr
   40           | expression relop addExpr

   41 relop: OPER_LTE
   42      | OPER_LT
   43      | OPER_GT
   44      | OPER_GTE
   45      | OPER_EQ
   46      | OPER_NEQ

   47 addExpr: term
   48        | addExpr addop term

   49 addop: OPER_ADD
   50      | OPER_SUB

   51 term: factor
   52     | term mulop factor

   53 mulop: OPER_MUL
   54      | OPER_DIV

   55 factor: LPAREN expression RPAREN
   56       | var
   57       | funcCallExpr
   58       | INTCONST
   59       | CHARCONST
   60       | STRCONST

   61 funcCallExpr: ID LPAREN argList RPAREN
   62             | ID LPAREN RPAREN

   63 argList: expression
   64        | argList COMMA expression


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 11 12 13 14 17 18 37 38 61 62
INTCONST (259) 11 58
CHARCONST (260) 59
STRCONST (261) 60
KWD_INT (262) 2 4
KWD_CHAR (263) 3 5
KWD_STRING (264)
KWD_VOID (265) 6
KWD_WHILE (266) 34
KWD_IF (267) 32 33
KWD_ELSE (268) 33
KWD_RETURN (269) 35 36
OPER_ADD (270) 49
OPER_SUB (271) 50
OPER_MUL (272) 53
OPER_DIV (273) 54
OPER_ASSN (274) 30
OPER_LT (275) 42
OPER_LTE (276) 41
OPER_EQ (277) 45
OPER_GTE (278) 44
OPER_GT (279) 43
OPER_NEQ (280) 46
OPER_ASGN (281)
LSQ_BRKT (282) 11 14 38
RSQ_BRKT (283) 11 14 38
LCRLY_BRKT (284) 19 29
RCRLY_BRKT (285) 19 29
LPAREN (286) 17 18 32 33 34 55 61 62
RPAREN (287) 17 18 32 33 34 55 61 62
COMMA (288) 16 64
SEMICLN (289) 11 12 30 31 35 36
ERROR (290)
ILLEGAL_TOKEN (291)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1, on right: 0
varTypeSpecifier (39)
    on left: 2 3, on right: 11 12 13 14 18
funcReturnType (40)
    on left: 4 5 6, on right: 17
declList (41)
    on left: 7 8, on right: 1 8
decl (42)
    on left: 9 10, on right: 7 8
varDecl (43)
    on left: 11 12, on right: 9 21
formalDecl (44)
    on left: 13 14, on right: 15 16
formalDeclList (45)
    on left: 15 16, on right: 16 17
funDecl (46)
    on left: 17 18, on right: 10
funBody (47)
    on left: 19, on right: 17 18
localDeclList (48)
    on left: 20 21, on right: 19 21
statementList (49)
    on left: 22 23, on right: 19 23 29
statement (50)
    on left: 24 25 26 27 28, on right: 23 32 33 34
compoundStmt (51)
    on left: 29, on right: 24
assignStmt (52)
    on left: 30 31, on right: 25
condStmt (53)
    on left: 32 33, on right: 26
loopStmt (54)
    on left: 34, on right: 27
returnStmt (55)
    on left: 35 36, on right: 28
var (56)
    on left: 37 38, on right: 30 56
expression (57)
    on left: 39 40, on right: 30 31 32 33 34 36 40 55 63 64
relop (58)
    on left: 41 42 43 44 45 46, on right: 40
addExpr (59)
    on left: 47 48, on right: 38 39 40 48
addop (60)
    on left: 49 50, on right: 48
term (61)
    on left: 51 52, on right: 47 48 52
mulop (62)
    on left: 53 54, on right: 52
factor (63)
    on left: 55 56 57 58 59 60, on right: 51 52
funcCallExpr (64)
    on left: 61 62, on right: 57
argList (65)
    on left: 63 64, on right: 61 64


state 0

    0 $accept: . program $end

    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3

    program           go to state 4
    varTypeSpecifier  go to state 5
    funcReturnType    go to state 6
    declList          go to state 7
    decl              go to state 8
    varDecl           go to state 9
    funDecl           go to state 10


state 1

    2 varTypeSpecifier: KWD_INT .
    4 funcReturnType: KWD_INT .

    ID        reduce using rule 2 (varTypeSpecifier)
    ID        [reduce using rule 4 (funcReturnType)]
    $default  reduce using rule 2 (varTypeSpecifier)


state 2

    3 varTypeSpecifier: KWD_CHAR .
    5 funcReturnType: KWD_CHAR .

    ID        reduce using rule 3 (varTypeSpecifier)
    ID        [reduce using rule 5 (funcReturnType)]
    $default  reduce using rule 3 (varTypeSpecifier)


state 3

    6 funcReturnType: KWD_VOID .

    $default  reduce using rule 6 (funcReturnType)


state 4

    0 $accept: program . $end

    $end  shift, and go to state 11


state 5

   11 varDecl: varTypeSpecifier . ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
   12        | varTypeSpecifier . ID SEMICLN
   18 funDecl: varTypeSpecifier . ID LPAREN RPAREN funBody

    ID  shift, and go to state 12


state 6

   17 funDecl: funcReturnType . ID LPAREN formalDeclList RPAREN funBody

    ID  shift, and go to state 13


state 7

    1 program: declList .
    8 declList: declList . decl

    KWD_INT   shift, and go to state 1
    KWD_CHAR  shift, and go to state 2
    KWD_VOID  shift, and go to state 3

    $default  reduce using rule 1 (program)

    varTypeSpecifier  go to state 5
    funcReturnType    go to state 6
    decl              go to state 14
    varDecl           go to state 9
    funDecl           go to state 10


state 8

    7 declList: decl .

    $default  reduce using rule 7 (declList)


state 9

    9 decl: varDecl .

    $default  reduce using rule 9 (decl)


state 10

   10 decl: funDecl .

    $default  reduce using rule 10 (decl)


state 11

    0 $accept: program $end .

    $default  accept


state 12

   11 varDecl: varTypeSpecifier ID . LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
   12        | varTypeSpecifier ID . SEMICLN
   18 funDecl: varTypeSpecifier ID . LPAREN RPAREN funBody

    LSQ_BRKT  shift, and go to state 15
    LPAREN    shift, and go to state 16
    SEMICLN   shift, and go to state 17


state 13

   17 funDecl: funcReturnType ID . LPAREN formalDeclList RPAREN funBody

    LPAREN  shift, and go to state 18


state 14

    8 declList: declList decl .

    $default  reduce using rule 8 (declList)


state 15

   11 varDecl: varTypeSpecifier ID LSQ_BRKT . INTCONST RSQ_BRKT SEMICLN

    INTCONST  shift, and go to state 19


state 16

   18 funDecl: varTypeSpecifier ID LPAREN . RPAREN funBody

    RPAREN  shift, and go to state 20


state 17

   12 varDecl: varTypeSpecifier ID SEMICLN .

    $default  reduce using rule 12 (varDecl)


state 18

   17 funDecl: funcReturnType ID LPAREN . formalDeclList RPAREN funBody

    KWD_INT   shift, and go to state 21
    KWD_CHAR  shift, and go to state 22

    varTypeSpecifier  go to state 23
    formalDecl        go to state 24
    formalDeclList    go to state 25


state 19

   11 varDecl: varTypeSpecifier ID LSQ_BRKT INTCONST . RSQ_BRKT SEMICLN

    RSQ_BRKT  shift, and go to state 26


state 20

   18 funDecl: varTypeSpecifier ID LPAREN RPAREN . funBody

    LCRLY_BRKT  shift, and go to state 27

    funBody  go to state 28


state 21

    2 varTypeSpecifier: KWD_INT .

    $default  reduce using rule 2 (varTypeSpecifier)


state 22

    3 varTypeSpecifier: KWD_CHAR .

    $default  reduce using rule 3 (varTypeSpecifier)


state 23

   13 formalDecl: varTypeSpecifier . ID
   14           | varTypeSpecifier . ID LSQ_BRKT RSQ_BRKT

    ID  shift, and go to state 29


state 24

   15 formalDeclList: formalDecl .
   16               | formalDecl . COMMA formalDeclList

    COMMA  shift, and go to state 30

    $default  reduce using rule 15 (formalDeclList)


state 25

   17 funDecl: funcReturnType ID LPAREN formalDeclList . RPAREN funBody

    RPAREN  shift, and go to state 31


state 26

   11 varDecl: varTypeSpecifier ID LSQ_BRKT INTCONST RSQ_BRKT . SEMICLN

    SEMICLN  shift, and go to state 32


state 27

   19 funBody: LCRLY_BRKT . localDeclList statementList RCRLY_BRKT

    KWD_INT   shift, and go to state 21
    KWD_CHAR  shift, and go to state 22

    $default  reduce using rule 20 (localDeclList)

    varTypeSpecifier  go to state 33
    varDecl           go to state 34
    localDeclList     go to state 35


state 28

   18 funDecl: varTypeSpecifier ID LPAREN RPAREN funBody .

    $default  reduce using rule 18 (funDecl)


state 29

   13 formalDecl: varTypeSpecifier ID .
   14           | varTypeSpecifier ID . LSQ_BRKT RSQ_BRKT

    LSQ_BRKT  shift, and go to state 36

    $default  reduce using rule 13 (formalDecl)


state 30

   16 formalDeclList: formalDecl COMMA . formalDeclList

    KWD_INT   shift, and go to state 21
    KWD_CHAR  shift, and go to state 22

    varTypeSpecifier  go to state 23
    formalDecl        go to state 24
    formalDeclList    go to state 37


state 31

   17 funDecl: funcReturnType ID LPAREN formalDeclList RPAREN . funBody

    LCRLY_BRKT  shift, and go to state 27

    funBody  go to state 38


state 32

   11 varDecl: varTypeSpecifier ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN .

    $default  reduce using rule 11 (varDecl)


state 33

   11 varDecl: varTypeSpecifier . ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
   12        | varTypeSpecifier . ID SEMICLN

    ID  shift, and go to state 39


state 34

   21 localDeclList: varDecl . localDeclList

    KWD_INT   shift, and go to state 21
    KWD_CHAR  shift, and go to state 22

    $default  reduce using rule 20 (localDeclList)

    varTypeSpecifier  go to state 33
    varDecl           go to state 34
    localDeclList     go to state 40


state 35

   19 funBody: LCRLY_BRKT localDeclList . statementList RCRLY_BRKT

    ID          shift, and go to state 41
    INTCONST    shift, and go to state 42
    CHARCONST   shift, and go to state 43
    STRCONST    shift, and go to state 44
    KWD_WHILE   shift, and go to state 45
    KWD_IF      shift, and go to state 46
    KWD_RETURN  shift, and go to state 47
    LCRLY_BRKT  shift, and go to state 48
    LPAREN      shift, and go to state 49

    $default  reduce using rule 22 (statementList)

    statementList  go to state 50
    statement      go to state 51
    compoundStmt   go to state 52
    assignStmt     go to state 53
    condStmt       go to state 54
    loopStmt       go to state 55
    returnStmt     go to state 56
    var            go to state 57
    expression     go to state 58
    addExpr        go to state 59
    term           go to state 60
    factor         go to state 61
    funcCallExpr   go to state 62


state 36

   14 formalDecl: varTypeSpecifier ID LSQ_BRKT . RSQ_BRKT

    RSQ_BRKT  shift, and go to state 63


state 37

   16 formalDeclList: formalDecl COMMA formalDeclList .

    $default  reduce using rule 16 (formalDeclList)


state 38

   17 funDecl: funcReturnType ID LPAREN formalDeclList RPAREN funBody .

    $default  reduce using rule 17 (funDecl)


state 39

   11 varDecl: varTypeSpecifier ID . LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
   12        | varTypeSpecifier ID . SEMICLN

    LSQ_BRKT  shift, and go to state 15
    SEMICLN   shift, and go to state 17


state 40

   21 localDeclList: varDecl localDeclList .

    $default  reduce using rule 21 (localDeclList)


state 41

   37 var: ID .
   38    | ID . RSQ_BRKT addExpr LSQ_BRKT
   61 funcCallExpr: ID . LPAREN argList RPAREN
   62             | ID . LPAREN RPAREN

    RSQ_BRKT  shift, and go to state 64
    LPAREN    shift, and go to state 65

    $default  reduce using rule 37 (var)


state 42

   58 factor: INTCONST .

    $default  reduce using rule 58 (factor)


state 43

   59 factor: CHARCONST .

    $default  reduce using rule 59 (factor)


state 44

   60 factor: STRCONST .

    $default  reduce using rule 60 (factor)


state 45

   34 loopStmt: KWD_WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 66


state 46

   32 condStmt: KWD_IF . LPAREN expression RPAREN statement
   33         | KWD_IF . LPAREN expression RPAREN statement KWD_ELSE statement

    LPAREN  shift, and go to state 67


state 47

   35 returnStmt: KWD_RETURN . SEMICLN
   36           | KWD_RETURN . expression SEMICLN

    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43
    STRCONST   shift, and go to state 44
    LPAREN     shift, and go to state 49
    SEMICLN    shift, and go to state 68

    var           go to state 69
    expression    go to state 70
    addExpr       go to state 59
    term          go to state 60
    factor        go to state 61
    funcCallExpr  go to state 62


state 48

   29 compoundStmt: LCRLY_BRKT . statementList RCRLY_BRKT

    ID          shift, and go to state 41
    INTCONST    shift, and go to state 42
    CHARCONST   shift, and go to state 43
    STRCONST    shift, and go to state 44
    KWD_WHILE   shift, and go to state 45
    KWD_IF      shift, and go to state 46
    KWD_RETURN  shift, and go to state 47
    LCRLY_BRKT  shift, and go to state 48
    LPAREN      shift, and go to state 49

    $default  reduce using rule 22 (statementList)

    statementList  go to state 71
    statement      go to state 51
    compoundStmt   go to state 52
    assignStmt     go to state 53
    condStmt       go to state 54
    loopStmt       go to state 55
    returnStmt     go to state 56
    var            go to state 57
    expression     go to state 58
    addExpr        go to state 59
    term           go to state 60
    factor         go to state 61
    funcCallExpr   go to state 62


state 49

   55 factor: LPAREN . expression RPAREN

    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43
    STRCONST   shift, and go to state 44
    LPAREN     shift, and go to state 49

    var           go to state 69
    expression    go to state 72
    addExpr       go to state 59
    term          go to state 60
    factor        go to state 61
    funcCallExpr  go to state 62


state 50

   19 funBody: LCRLY_BRKT localDeclList statementList . RCRLY_BRKT

    RCRLY_BRKT  shift, and go to state 73


state 51

   23 statementList: statement . statementList

    ID          shift, and go to state 41
    INTCONST    shift, and go to state 42
    CHARCONST   shift, and go to state 43
    STRCONST    shift, and go to state 44
    KWD_WHILE   shift, and go to state 45
    KWD_IF      shift, and go to state 46
    KWD_RETURN  shift, and go to state 47
    LCRLY_BRKT  shift, and go to state 48
    LPAREN      shift, and go to state 49

    $default  reduce using rule 22 (statementList)

    statementList  go to state 74
    statement      go to state 51
    compoundStmt   go to state 52
    assignStmt     go to state 53
    condStmt       go to state 54
    loopStmt       go to state 55
    returnStmt     go to state 56
    var            go to state 57
    expression     go to state 58
    addExpr        go to state 59
    term           go to state 60
    factor         go to state 61
    funcCallExpr   go to state 62


state 52

   24 statement: compoundStmt .

    $default  reduce using rule 24 (statement)


state 53

   25 statement: assignStmt .

    $default  reduce using rule 25 (statement)


state 54

   26 statement: condStmt .

    $default  reduce using rule 26 (statement)


state 55

   27 statement: loopStmt .

    $default  reduce using rule 27 (statement)


state 56

   28 statement: returnStmt .

    $default  reduce using rule 28 (statement)


state 57

   30 assignStmt: var . OPER_ASSN expression SEMICLN
   56 factor: var .

    OPER_ASSN  shift, and go to state 75

    $default  reduce using rule 56 (factor)


state 58

   31 assignStmt: expression . SEMICLN
   40 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 76
    OPER_LTE  shift, and go to state 77
    OPER_EQ   shift, and go to state 78
    OPER_GTE  shift, and go to state 79
    OPER_GT   shift, and go to state 80
    OPER_NEQ  shift, and go to state 81
    SEMICLN   shift, and go to state 82

    relop  go to state 83


state 59

   39 expression: addExpr .
   48 addExpr: addExpr . addop term

    OPER_ADD  shift, and go to state 84
    OPER_SUB  shift, and go to state 85

    $default  reduce using rule 39 (expression)

    addop  go to state 86


state 60

   47 addExpr: term .
   52 term: term . mulop factor

    OPER_MUL  shift, and go to state 87
    OPER_DIV  shift, and go to state 88

    $default  reduce using rule 47 (addExpr)

    mulop  go to state 89


state 61

   51 term: factor .

    $default  reduce using rule 51 (term)


state 62

   57 factor: funcCallExpr .

    $default  reduce using rule 57 (factor)


state 63

   14 formalDecl: varTypeSpecifier ID LSQ_BRKT RSQ_BRKT .

    $default  reduce using rule 14 (formalDecl)


state 64

   38 var: ID RSQ_BRKT . addExpr LSQ_BRKT

    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43
    STRCONST   shift, and go to state 44
    LPAREN     shift, and go to state 49

    var           go to state 69
    addExpr       go to state 90
    term          go to state 60
    factor        go to state 61
    funcCallExpr  go to state 62


state 65

   61 funcCallExpr: ID LPAREN . argList RPAREN
   62             | ID LPAREN . RPAREN

    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43
    STRCONST   shift, and go to state 44
    LPAREN     shift, and go to state 49
    RPAREN     shift, and go to state 91

    var           go to state 69
    expression    go to state 92
    addExpr       go to state 59
    term          go to state 60
    factor        go to state 61
    funcCallExpr  go to state 62
    argList       go to state 93


state 66

   34 loopStmt: KWD_WHILE LPAREN . expression RPAREN statement

    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43
    STRCONST   shift, and go to state 44
    LPAREN     shift, and go to state 49

    var           go to state 69
    expression    go to state 94
    addExpr       go to state 59
    term          go to state 60
    factor        go to state 61
    funcCallExpr  go to state 62


state 67

   32 condStmt: KWD_IF LPAREN . expression RPAREN statement
   33         | KWD_IF LPAREN . expression RPAREN statement KWD_ELSE statement

    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43
    STRCONST   shift, and go to state 44
    LPAREN     shift, and go to state 49

    var           go to state 69
    expression    go to state 95
    addExpr       go to state 59
    term          go to state 60
    factor        go to state 61
    funcCallExpr  go to state 62


state 68

   35 returnStmt: KWD_RETURN SEMICLN .

    $default  reduce using rule 35 (returnStmt)


state 69

   56 factor: var .

    $default  reduce using rule 56 (factor)


state 70

   36 returnStmt: KWD_RETURN expression . SEMICLN
   40 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 76
    OPER_LTE  shift, and go to state 77
    OPER_EQ   shift, and go to state 78
    OPER_GTE  shift, and go to state 79
    OPER_GT   shift, and go to state 80
    OPER_NEQ  shift, and go to state 81
    SEMICLN   shift, and go to state 96

    relop  go to state 83


state 71

   29 compoundStmt: LCRLY_BRKT statementList . RCRLY_BRKT

    RCRLY_BRKT  shift, and go to state 97


state 72

   40 expression: expression . relop addExpr
   55 factor: LPAREN expression . RPAREN

    OPER_LT   shift, and go to state 76
    OPER_LTE  shift, and go to state 77
    OPER_EQ   shift, and go to state 78
    OPER_GTE  shift, and go to state 79
    OPER_GT   shift, and go to state 80
    OPER_NEQ  shift, and go to state 81
    RPAREN    shift, and go to state 98

    relop  go to state 83


state 73

   19 funBody: LCRLY_BRKT localDeclList statementList RCRLY_BRKT .

    $default  reduce using rule 19 (funBody)


state 74

   23 statementList: statement statementList .

    $default  reduce using rule 23 (statementList)


state 75

   30 assignStmt: var OPER_ASSN . expression SEMICLN

    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43
    STRCONST   shift, and go to state 44
    LPAREN     shift, and go to state 49

    var           go to state 69
    expression    go to state 99
    addExpr       go to state 59
    term          go to state 60
    factor        go to state 61
    funcCallExpr  go to state 62


state 76

   42 relop: OPER_LT .

    $default  reduce using rule 42 (relop)


state 77

   41 relop: OPER_LTE .

    $default  reduce using rule 41 (relop)


state 78

   45 relop: OPER_EQ .

    $default  reduce using rule 45 (relop)


state 79

   44 relop: OPER_GTE .

    $default  reduce using rule 44 (relop)


state 80

   43 relop: OPER_GT .

    $default  reduce using rule 43 (relop)


state 81

   46 relop: OPER_NEQ .

    $default  reduce using rule 46 (relop)


state 82

   31 assignStmt: expression SEMICLN .

    $default  reduce using rule 31 (assignStmt)


state 83

   40 expression: expression relop . addExpr

    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43
    STRCONST   shift, and go to state 44
    LPAREN     shift, and go to state 49

    var           go to state 69
    addExpr       go to state 100
    term          go to state 60
    factor        go to state 61
    funcCallExpr  go to state 62


state 84

   49 addop: OPER_ADD .

    $default  reduce using rule 49 (addop)


state 85

   50 addop: OPER_SUB .

    $default  reduce using rule 50 (addop)


state 86

   48 addExpr: addExpr addop . term

    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43
    STRCONST   shift, and go to state 44
    LPAREN     shift, and go to state 49

    var           go to state 69
    term          go to state 101
    factor        go to state 61
    funcCallExpr  go to state 62


state 87

   53 mulop: OPER_MUL .

    $default  reduce using rule 53 (mulop)


state 88

   54 mulop: OPER_DIV .

    $default  reduce using rule 54 (mulop)


state 89

   52 term: term mulop . factor

    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43
    STRCONST   shift, and go to state 44
    LPAREN     shift, and go to state 49

    var           go to state 69
    factor        go to state 102
    funcCallExpr  go to state 62


state 90

   38 var: ID RSQ_BRKT addExpr . LSQ_BRKT
   48 addExpr: addExpr . addop term

    OPER_ADD  shift, and go to state 84
    OPER_SUB  shift, and go to state 85
    LSQ_BRKT  shift, and go to state 103

    addop  go to state 86


state 91

   62 funcCallExpr: ID LPAREN RPAREN .

    $default  reduce using rule 62 (funcCallExpr)


state 92

   40 expression: expression . relop addExpr
   63 argList: expression .

    OPER_LT   shift, and go to state 76
    OPER_LTE  shift, and go to state 77
    OPER_EQ   shift, and go to state 78
    OPER_GTE  shift, and go to state 79
    OPER_GT   shift, and go to state 80
    OPER_NEQ  shift, and go to state 81

    $default  reduce using rule 63 (argList)

    relop  go to state 83


state 93

   61 funcCallExpr: ID LPAREN argList . RPAREN
   64 argList: argList . COMMA expression

    RPAREN  shift, and go to state 104
    COMMA   shift, and go to state 105


state 94

   34 loopStmt: KWD_WHILE LPAREN expression . RPAREN statement
   40 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 76
    OPER_LTE  shift, and go to state 77
    OPER_EQ   shift, and go to state 78
    OPER_GTE  shift, and go to state 79
    OPER_GT   shift, and go to state 80
    OPER_NEQ  shift, and go to state 81
    RPAREN    shift, and go to state 106

    relop  go to state 83


state 95

   32 condStmt: KWD_IF LPAREN expression . RPAREN statement
   33         | KWD_IF LPAREN expression . RPAREN statement KWD_ELSE statement
   40 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 76
    OPER_LTE  shift, and go to state 77
    OPER_EQ   shift, and go to state 78
    OPER_GTE  shift, and go to state 79
    OPER_GT   shift, and go to state 80
    OPER_NEQ  shift, and go to state 81
    RPAREN    shift, and go to state 107

    relop  go to state 83


state 96

   36 returnStmt: KWD_RETURN expression SEMICLN .

    $default  reduce using rule 36 (returnStmt)


state 97

   29 compoundStmt: LCRLY_BRKT statementList RCRLY_BRKT .

    $default  reduce using rule 29 (compoundStmt)


state 98

   55 factor: LPAREN expression RPAREN .

    $default  reduce using rule 55 (factor)


state 99

   30 assignStmt: var OPER_ASSN expression . SEMICLN
   40 expression: expression . relop addExpr

    OPER_LT   shift, and go to state 76
    OPER_LTE  shift, and go to state 77
    OPER_EQ   shift, and go to state 78
    OPER_GTE  shift, and go to state 79
    OPER_GT   shift, and go to state 80
    OPER_NEQ  shift, and go to state 81
    SEMICLN   shift, and go to state 108

    relop  go to state 83


state 100

   40 expression: expression relop addExpr .
   48 addExpr: addExpr . addop term

    OPER_ADD  shift, and go to state 84
    OPER_SUB  shift, and go to state 85

    $default  reduce using rule 40 (expression)

    addop  go to state 86


state 101

   48 addExpr: addExpr addop term .
   52 term: term . mulop factor

    OPER_MUL  shift, and go to state 87
    OPER_DIV  shift, and go to state 88

    $default  reduce using rule 48 (addExpr)

    mulop  go to state 89


state 102

   52 term: term mulop factor .

    $default  reduce using rule 52 (term)


state 103

   38 var: ID RSQ_BRKT addExpr LSQ_BRKT .

    $default  reduce using rule 38 (var)


state 104

   61 funcCallExpr: ID LPAREN argList RPAREN .

    $default  reduce using rule 61 (funcCallExpr)


state 105

   64 argList: argList COMMA . expression

    ID         shift, and go to state 41
    INTCONST   shift, and go to state 42
    CHARCONST  shift, and go to state 43
    STRCONST   shift, and go to state 44
    LPAREN     shift, and go to state 49

    var           go to state 69
    expression    go to state 109
    addExpr       go to state 59
    term          go to state 60
    factor        go to state 61
    funcCallExpr  go to state 62


state 106

   34 loopStmt: KWD_WHILE LPAREN expression RPAREN . statement

    ID          shift, and go to state 41
    INTCONST    shift, and go to state 42
    CHARCONST   shift, and go to state 43
    STRCONST    shift, and go to state 44
    KWD_WHILE   shift, and go to state 45
    KWD_IF      shift, and go to state 46
    KWD_RETURN  shift, and go to state 47
    LCRLY_BRKT  shift, and go to state 48
    LPAREN      shift, and go to state 49

    statement     go to state 110
    compoundStmt  go to state 52
    assignStmt    go to state 53
    condStmt      go to state 54
    loopStmt      go to state 55
    returnStmt    go to state 56
    var           go to state 57
    expression    go to state 58
    addExpr       go to state 59
    term          go to state 60
    factor        go to state 61
    funcCallExpr  go to state 62


state 107

   32 condStmt: KWD_IF LPAREN expression RPAREN . statement
   33         | KWD_IF LPAREN expression RPAREN . statement KWD_ELSE statement

    ID          shift, and go to state 41
    INTCONST    shift, and go to state 42
    CHARCONST   shift, and go to state 43
    STRCONST    shift, and go to state 44
    KWD_WHILE   shift, and go to state 45
    KWD_IF      shift, and go to state 46
    KWD_RETURN  shift, and go to state 47
    LCRLY_BRKT  shift, and go to state 48
    LPAREN      shift, and go to state 49

    statement     go to state 111
    compoundStmt  go to state 52
    assignStmt    go to state 53
    condStmt      go to state 54
    loopStmt      go to state 55
    returnStmt    go to state 56
    var           go to state 57
    expression    go to state 58
    addExpr       go to state 59
    term          go to state 60
    factor        go to state 61
    funcCallExpr  go to state 62


state 108

   30 assignStmt: var OPER_ASSN expression SEMICLN .

    $default  reduce using rule 30 (assignStmt)


state 109

   40 expression: expression . relop addExpr
   64 argList: argList COMMA expression .

    OPER_LT   shift, and go to state 76
    OPER_LTE  shift, and go to state 77
    OPER_EQ   shift, and go to state 78
    OPER_GTE  shift, and go to state 79
    OPER_GT   shift, and go to state 80
    OPER_NEQ  shift, and go to state 81

    $default  reduce using rule 64 (argList)

    relop  go to state 83


state 110

   34 loopStmt: KWD_WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 34 (loopStmt)


state 111

   32 condStmt: KWD_IF LPAREN expression RPAREN statement .
   33         | KWD_IF LPAREN expression RPAREN statement . KWD_ELSE statement

    KWD_ELSE  shift, and go to state 112

    KWD_ELSE  [reduce using rule 32 (condStmt)]
    $default  reduce using rule 32 (condStmt)


state 112

   33 condStmt: KWD_IF LPAREN expression RPAREN statement KWD_ELSE . statement

    ID          shift, and go to state 41
    INTCONST    shift, and go to state 42
    CHARCONST   shift, and go to state 43
    STRCONST    shift, and go to state 44
    KWD_WHILE   shift, and go to state 45
    KWD_IF      shift, and go to state 46
    KWD_RETURN  shift, and go to state 47
    LCRLY_BRKT  shift, and go to state 48
    LPAREN      shift, and go to state 49

    statement     go to state 113
    compoundStmt  go to state 52
    assignStmt    go to state 53
    condStmt      go to state 54
    loopStmt      go to state 55
    returnStmt    go to state 56
    var           go to state 57
    expression    go to state 58
    addExpr       go to state 59
    term          go to state 60
    factor        go to state 61
    funcCallExpr  go to state 62


state 113

   33 condStmt: KWD_IF LPAREN expression RPAREN statement KWD_ELSE statement .

    $default  reduce using rule 33 (condStmt)
